#include "Magic.h"

int main()
{
    /*** RESIZE AND MOVE CONSOLE ***/
    HWND console = GetConsoleWindow();
    RECT r;
    GetWindowRect(console, &r);
    MoveWindow(console, r.left, r.top, 800, 700, TRUE);
    
    /*** CREATE AND INITIALIZE REPEAT AND NOREDO VARIABLES ***/
    char repeat = 'y';
    int noReDo1, noReDo2;
    noReDo1 = noReDo2 = 0;
    
    /*** CREATE IDENTIFIERS TO READ USER'S NAME ***/
    string name;
    const int LENGTH = 81;
    char string1[LENGTH];
    
    /*** DISPLAY TITLE SCREEN ***/
    titleScreen();
    system("cls");
    
    /*** PROMPT FOR AND READ NAME INTO CHAR ARRAY***/
    cout << "\n Hello! What is your name? (First and Last):   ";
    cin.getline(string1, LENGTH);
    
    /*** STORE NAME INTO STRING NAME ***/
    name = string1;
    
    /*** TRUNCATE LAST NAME ***/
    size_t found = name.find_first_of(" ");
    name.erase ((found), 30);
    
    /*** CREATE WHILE REPEAT LOOP ***/
    while (repeat != 'N')
    {
        system("cls");
        /*** DISPLAY HEADER ***/
        cout << endl << setw(51) << " ________________________ \n"
             << setw(51) << right << "|      Welcome to        |\n"
             << setw(51) << "|   A. J. GREENBAUM's    |\n"
             << setw(51) << "| COLLECTION of CONJURY. |\n"
             << setw(54) << " -------------------------- \n\n ";
        
        /*** CREATE, PROMPT FOR, AND READ CHOICE ***/
        int choice;
        cout << name << ", please select one of the following:" << endl << endl;
        
        /*** CREATE DO-WHILE LOOP FOR VALIDATION ***/
        do
        {
             cout << " 1) Magic Square.\n";
             cout << "\n 2) Mind Reading Cards.\n";
             cout << "\n 3) Word Prediction.\n";
             cout << "        >> Must have internet access and a browser ready to go.\n";
             cout << "\n 4) Cube Extraction.\n";
             cout << "        >> Must have a calculater ready to go.\n";
             cout << "\n 5) Number Divination.\n";
             cout << "        >> Please have a pencil and paper ready.\n";
             cout << "\n 6) Birthday Revealer.\n";
             cout << "\n 7) Spelling Bee.\n";
             cout << "\n What would you like to do? ";
             cin >> choice;
             cout << endl;
             if (choice < 1 || choice > 7)
                 cout << " <ERROR> Input must be from 1 to 7.  Please try again. <ERROR>\n\n";
        }while (choice < 1 || choice > 7);
        
        /*** CREATE SWITCH TO ALLOW PROGRAM TO FOLLOW USER'S CHOICE ***/
        switch (choice)
        {
             /*** MAGIC SQUARE ***/
             case 1:
                     MagicSquare(name);
                     break;
             
             /*** MIND READING CARDS ***/
             case 2:
                     mindReadingCards(name);
                     break;
             
             /*** WORD PREDICTION ***/
             case 3:
                     /*** DO NOT ALLOW USER TO REPEAT ***/
                     if (noReDo1 == 1)
                     {
                         cin.ignore(1000, '\n');
                         cout << " <ERROR> You've done that once.  Please try something new. <ERROR>\n\n";
                         cout << endl << " Press <ENTER> to CONTINUE . . . ";
                         cin.ignore(1000, '\n');
                         break;
                     }
                     else
                     {
                         noReDo1++;
                         guess1089(name);
                         break;
                     }
             
             /*** CUBE EXTRACTION ***/
             case 4:
                     cubedRoot(name);
                     break;
                     
             /*** NUMBER DIVINATION ***/
             case 5:
                     numberDivining(name);
                     break;
                     
             /*** BIRTHDAY REVEALER ***/
             case 6:
                     /*** DO NOT ALLOW USER TO REPEAT ***/
                     if (noReDo2 == 1)
                     {
                         cin.ignore(1000, '\n');
                         cout << " <ERROR> You only have one birthday.  Please try something new. <ERROR>\n";
                         cout << endl << " Press <ENTER> to CONTINUE . . . ";
                         cin.ignore(1000, '\n');
                         break;
                     }
                     else
                     {
                         noReDo2++;
                         Birthdays(name);
                         break;
                     }
             /*** SPELLING BEE ***/
             case 7:
                     spellingBee(string1, name);
                     break;
        }
        
        /*** CREATE DO-WHILE TO VALIDATE REPEAT LOOP ***/
        do
        {
            system("cls");
            
            /*** PROMPT FOR AND READ REPEAT ***/
            cout << "\n Would you like to try a different effect? Y or N: ";
            cin >> repeat;
            repeat = toupper(repeat);
            if (repeat != 'Y' && repeat != 'N')
                cout << " I'm sorry, that is not a valid entry.  Please try again.\n";
        }while (repeat != 'Y' && repeat != 'N');
        cin.ignore(1000, '\n');
    }
    
    /*** END PROGRAM ***/
    cout << "\n " << name << ", thank you for your attention.  I hope you enjoyed the collection!!";
    cout << endl << "\n Press <ENTER> to EXIT . . . ";	
    cin.ignore(1000, '\n');
    exit(0);
}

/**********************************************************************
*                              PAUSE                                   *
* Allows for the program to seem like it's making its prediction.      *
***********************************************************************/
void pause()
{
    Sleep(1000);
    cout << ". ";
    Sleep(1000);
    cout << ". ";
    Sleep(1000);
    cout << ".";
    Sleep(1000);
}

/***************************************************************************
*                               REPEAT LOOP                                *
* Prompts for, reads, and validates the user's entry for all repeat loops. *
****************************************************************************/
char repeatLoop()
{
     char repeat;
     do
     {
         cout << " Would you like to try this effect again? Y or N: ";
         cin >> repeat;
         repeat = toupper(repeat);
         if (repeat != 'Y' && repeat != 'N')
            cout << " I'm sorry, that is not a valid entry.  Please try again.\n";
     }while (repeat != 'Y' && repeat != 'N');
     return repeat;
}
